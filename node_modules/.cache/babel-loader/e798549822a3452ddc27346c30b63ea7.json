{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Projects/Projetos/sd-013-b-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\nconst initialState = {\n  id: 0,\n  title: 'undifined',\n  storyline: 'undifined',\n  imagePath: 'undifined',\n  genre: 'undifined',\n  rating: 'undifined',\n  subtitle: 'undifined'\n};\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    this.fetchMovie(id);\n  }\n\n  async fetchMovie(id) {\n    const movie = await movieAPI.getMovie(id);\n    this.setState(movie);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const {\n      id,\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = this.state;\n    if (this.state === initialState) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"VOLTAR\"));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/usuario/Projects/Projetos/sd-013-b-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","Link","PropTypes","movieAPI","Loading","initialState","id","title","storyline","imagePath","genre","rating","subtitle","MovieDetails","constructor","state","componentDidMount","match","props","params","fetchMovie","movie","getMovie","setState","render","propTypes","shape","oneOfType","string","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nconst initialState = {\n  id: 0,\n  title: 'undifined',\n  storyline: 'undifined',\n  imagePath: 'undifined',\n  genre: 'undifined',\n  rating: 'undifined',\n  subtitle: 'undifined',\n};\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    this.fetchMovie(id);\n  }\n\n  async fetchMovie(id) {\n    const movie = await movieAPI.getMovie(id);\n    this.setState(movie);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = this.state;\n\n    if (this.state === initialState) return <Loading />;\n\n    return (\n      <div data-testid=\"movie-details\">\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <p>{title}</p>\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n        <Link to={ `/movies/${id}/edit` }>EDITAR</Link>\n        <Link to=\"/\">VOLTAR</Link>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}