{"ast":null,"code":"var _jsxFileName = \"/home/usuario/Projects/Projetos/sd-013-b-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      shouldRedirect: false,\n      status: 'loading'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    this.fetchMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true\n    });\n  }\n\n  async fetchMovie(id) {\n    const movie = await movieAPI.getMovie(id);\n    this.setState({\n      movie,\n      status: 'ok'\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      // Redirect\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      // render Loading\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }).isRequired\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/home/usuario/Projects/Projetos/sd-013-b-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","PropTypes","Loading","MovieForm","movieAPI","EditMovie","constructor","props","state","movie","shouldRedirect","status","handleSubmit","bind","componentDidMount","match","params","id","fetchMovie","updatedMovie","updateMovie","setState","getMovie","render","propTypes","shape","oneOfType","string","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,cAAc,EAAE,KAA7B;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAES,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAASD,MAAf;AACA,SAAKE,UAAL,CAAgBD,EAAhB;AACD;;AAEDL,EAAAA,YAAY,CAACO,YAAD,EAAe;AACzBf,IAAAA,QAAQ,CAACgB,WAAT,CAAqBD,YAArB;AACA,SAAKE,QAAL,CAAc;AAAEX,MAAAA,cAAc,EAAE;AAAlB,KAAd;AACD;;AAEe,QAAVQ,UAAU,CAACD,EAAD,EAAK;AACnB,UAAMR,KAAK,GAAG,MAAML,QAAQ,CAACkB,QAAT,CAAkBL,EAAlB,CAApB;AACA,SAAKI,QAAL,CACE;AAAEZ,MAAAA,KAAF;AAASE,MAAAA,MAAM,EAAE;AAAjB,KADF;AAGD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,MAAF;AAAUD,MAAAA,cAAV;AAA0BD,MAAAA;AAA1B,QAAoC,KAAKD,KAA/C;;AACA,QAAIE,cAAJ,EAAoB;AAClB;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB;AACA,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGF,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKG,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA3C+B;;AA8ClCP,SAAS,CAACmB,SAAV,GAAsB;AACpBT,EAAAA,KAAK,EAAEd,SAAS,CAACwB,KAAV,CAAgB;AACrBT,IAAAA,MAAM,EAAEf,SAAS,CAACwB,KAAV,CAAgB;AACtBR,MAAAA,EAAE,EAAEhB,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAAC0B,MAAX,EAAmB1B,SAAS,CAAC2B,MAA7B,CAApB;AADkB,KAAhB,EAELC;AAHkB,GAAhB,EAIJA;AALiB,CAAtB;AAQA,eAAexB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loading, MovieForm } from '../components';\n\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { movie: {}, shouldRedirect: false, status: 'loading' };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    this.fetchMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({ shouldRedirect: true });\n  }\n\n  async fetchMovie(id) {\n    const movie = await movieAPI.getMovie(id);\n    this.setState(\n      { movie, status: 'ok' },\n    );\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      // Redirect\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      // render Loading\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}